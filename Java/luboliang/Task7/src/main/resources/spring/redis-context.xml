<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd">
    <!--扫描redis配置文件-->
    <!--<context:property-placeholder ignore-unresolvable="true" location="classpath:properties/redis.properties"/>-->
    <!--<context:property-placeholder location="classpath:properties/redis.properties"/>-->
    <!--设置连接池-->
    <!-- 注入连接池配置 -->
    <bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大空闲数 -->
        <property name="maxIdle" value="300"/>
        <!-- 最大等待时间 -->
        <property name="maxWaitMillis" value="1000"/>
        <!-- 最大连接数 -->
        <property name="maxTotal" value="100" />
        <!-- 是否检测连接池的可用性 -->
        <property name="testOnBorrow" value="true"/>
    </bean>


    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="118.190.199.167"/>
        <!--<property name="hostName" value="127.0.0.1"/>-->

        <!--<property name="hostName" value="106.14.221.250"/>-->
        <property name="port" value="6379"/>
        <property name="poolConfig" ref="jedisConfig"/>
        <property name="password" value="812497683z."/>
    </bean>


    <!-- redis操作模板，这里采用尽量面向对象的模板 -->
   <!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        &lt;!&ndash;如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！&ndash;&gt;
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    </property>-->
    <!--jedisConnectionFactory-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <!-- 如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 -->
        <!--Spring提供的两种序列化策略StringRedisSerializer或者JdkSerializationRedisSerializer-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <!--   <property name="valueSerializer">
               <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
           </property>-->
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>



        <!--   <bean id="stringRedisSerializer"  class="org.springframework.data.redis.serializer.StringRedisSerializer" />
           <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
               <property name="connectionFactory" ref="connectionFactory" />
               <property name="keySerializer" ref="stringRedisSerializer" />
               <property name="hashKeySerializer" ref="stringRedisSerializer" />
               <property name="valueSerializer" ref="stringRedisSerializer"/>-->
        </bean>
        <!--<property name="valueSerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
        <!--</property>-->

        <!--开启事务-->
        <!--<property name="enableTransactionSupport" value="true"/>-->
  <!--  </bean>
-->
</beans>
