<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!--&lt;!&ndash; 配置整合mybatis过程 &ndash;&gt;-->
    <!--&lt;!&ndash; 1.配置数据库相关参数properties的属性：${url} &ndash;&gt;-->
    <!--<context:property-placeholder location="classpath:spring/jdbc.properties" />-->
    <!--&lt;!&ndash; 数据库连接池 &ndash;&gt;-->
    <import resource="classpath:spring/redis-context.xml"/>
    <!--<import resource="classpath:spring/sevice.xml"/>-->
    <!--<Bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">-->
        <!--&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;-->
        <!--<property name="url" value="${jdbc.url}" />-->
        <!--<property name="username" value="${jdbc.username}" />-->
        <!--<property name="password" value="${jdbc.password}" />-->
        <!--<property name="driverClassName" value="${jdbc.driver}" />-->
        <!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
        <!--<property name="initialSize" value="${druid.initialSize}"/>-->
        <!--<property name="minIdle" value="${druid.minIdle}"/>-->
        <!--<property name="maxActive" value="${druid.maxActive}"/>-->
        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="${druid.maxWait}"/>-->
        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />-->
        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />-->
        <!--<property name="validationQuery" value="${druid.validationQuery}" />-->
        <!--<property name="testWhileIdle" value="${druid.testWhileIdle}" />-->
        <!--<property name="testOnBorrow" value="${druid.testOnBorrow}" />-->
        <!--<property name="testOnReturn" value="${druid.testOnReturn}" />-->
        <!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小  如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。&ndash;&gt;-->
        <!--<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" />-->
        <!--&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
        <!--<property name="filters" value="${druid.filters}" />-->
    <!--</Bean>-->

    <!--&lt;!&ndash; 3.配置SqlSessionFactory对象 &ndash;&gt;-->
    <!--<Bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--&lt;!&ndash; 注入数据库连接池 &ndash;&gt;-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--&lt;!&ndash; 配置MyBaties全局配置文件:mybatis-config.xml &ndash;&gt;-->
        <!--<property name="configLocation" value="classpath:/spring/mybatis-config.xml" />-->
        <!--&lt;!&ndash; 扫描entity包 使用别名 &ndash;&gt;-->
        <!--<property name="typeAliasesPackage" value="com.jnshu.model" />-->
        <!--&lt;!&ndash; 扫描sql配置文件:mapper需要的xml文件 &ndash;&gt;-->
        <!--<property name="mapperLocations" value="classpath:/mapper/*.xml" />-->
    <!--</Bean>-->

    <!--&lt;!&ndash; 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 &ndash;&gt;-->
    <!--<Bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--&lt;!&ndash; 注入sqlSessionFactory &ndash;&gt;-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->
        <!--&lt;!&ndash; 给出需要扫描Dao接口包 &ndash;&gt;-->
        <!--<property name="basePackage" value="com.jnshu.MyBatis" />-->
    <!--</Bean>-->
    <!--<bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean" name="StudentService">-->
        <!--<property name="serviceUrl" value="rmi://118.190.199.167:1199/student"></property>-->
        <!--<property name="serviceInterface" value="com.jnshu.service.StudentService"></property>-->
    <!--</bean>-->
    <!--<bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean" name="ProfessionService">-->
        <!--<property name="serviceUrl" value="rmi://118.190.199.167:1199/profession"></property>-->
        <!--<property name="serviceInterface" value="com.jnshu.service.ProfessionService"></property>-->
    <!--</bean>-->
    <import resource="server1.xml"/>
    <import resource="server2.xml"/>
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>message</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="cacheSeconds" value="60" />
    </bean>
    <context:component-scan base-package="com.jnshu"/>
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

</beans>